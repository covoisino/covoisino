# ios/Podfile

# Uncomment this to define a global platform for your project
platform :ios, '13.0'

# Disable CocoaPods analytics
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Locate your Flutter root directory via the Generated.xcconfig file
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. Did you run 'flutter pub get'?"
  end
  File.dirname(File.dirname(generated_xcode_build_settings_path))
end

# Pull in the Flutter-provided CocoaPods helper
require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'), __FILE__)

target 'Runner' do
  use_frameworks!         # needed for Swift-based plugins
  use_modular_headers!    # improves compatibility

  # Apply any Flutter-specific Podfile settings (ARCHS, etc.)
  flutter_ios_podfile_setup

  # This is where all your plugins get hooked in:
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # If you have any extra, manual pods, you can add them here:
  # pod 'SomeOtherPod', '~> 1.2.3'
end

# Prevent embedding of bitcode (optionalâ€”only if you need it)
post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      # disable bitcode if you run into Xcode errors
      config.build_settings['ENABLE_BITCODE'] = 'NO'
    end
  end
end